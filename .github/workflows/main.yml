name: KubernetesDeployment

on:
  workflow_dispatch:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and test frontend
      working-directory: ./my_microservices_project/frontend
      run: |
        docker build -t koushikpk/frontend .
        # Add testing steps here if applicable
        
    - name: Build and test order-management
      working-directory: ./my_microservices_project/order_management
      run: |
        docker build -t koushikpk/order-management .
        # Add testing steps here if applicable

    - name: Build and test product-catalog
      working-directory: ./my_microservices_project/product_catalog
      run: |
        docker build -t koushikpk/product-catalog .
        # Add testing steps here if applicable

    - name: Build and test user-management
      working-directory: ./my_microservices_project/user_management
      run: |
        docker build -t koushikpk/user-management .
        # Add testing steps here if applicable

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: koushikpk.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Push frontend image to ACR
      working-directory: ./my_microservices_project/frontend
      run: |
        docker build -t koushikpk.azurecr.io/my-microservices-project/frontend .
        docker push koushikpk.azurecr.io/my-microservices-project/frontend

    - name: Push order-management image to ACR
      working-directory: ./my_microservices_project/order_management
      run: |
        docker build -t koushikpk.azurecr.io/my-microservices-project/order-management .
        docker push koushikpk.azurecr.io/my-microservices-project/order-management

    - name: Push product-catalog image to ACR
      working-directory: ./my_microservices_project/product_catalog
      run: |
        docker build -t koushikpk.azurecr.io/my-microservices-project/product-catalog .
        docker push koushikpk.azurecr.io/my-microservices-project/product-catalog

    - name: Push user-management image to ACR
      working-directory: ./my_microservices_project/user_management
      run: |
        docker build -t koushikpk.azurecr.io/my-microservices-project/user-management .
        docker push koushikpk.azurecr.io/my-microservices-project/user-management

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Set up Kubernetes CLI
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: koushik
        cluster-name: 'koushik-cluster'

    - name: Deploy frontend to AKS
      working-directory: ./my_microservices_project
      run: kubectl apply -f kubernetes/frontend-deployment.yaml

    - name: Deploy order-management to AKS
      working-directory: ./my_microservices_project
      run: kubectl apply -f kubernetes/order-management-deployment.yaml

    - name: Deploy product-catalog to AKS
      working-directory: ./my_microservices_project
      run: kubectl apply -f kubernetes/product-catalog-deployment.yaml

    - name: Deploy user-management to AKS
      working-directory: ./my_microservices_project
      run: kubectl apply -f kubernetes/user-management-deployment.yaml

    - name: Deploy frontend service to AKS
      working-directory: ./my_microservices_project
      run: kubectl apply -f kubernetes/frontend-service.yaml

    - name: Deploy order-management service to AKS
      working-directory: ./my_microservices_project
      run: kubectl apply -f kubernetes/order-management-service.yaml

    - name: Deploy product-catalog service to AKS
      working-directory: ./my_microservices_project
      run: kubectl apply -f kubernetes/product-catalog-service.yaml

    - name: Deploy user-management service to AKS
      working-directory: ./my_microservices_project
      run: kubectl apply -f kubernetes/user-management-service.yaml
