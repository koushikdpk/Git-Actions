name: Deploy to AKS

on:
  workflow_dispatch: 
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
         
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
         login-server: koushikpk.azurecr.io
         username: ${{ secrets.ACR_USERNAME }}
         password: ${{ secrets.ACR_PASSWORD }}
         
      - name: Push frontend image to ACR
        working-directory: ./
        run: |
          docker build -t koushikpk.azurecr.io/my-project .
          docker push koushikpk.azurecr.io/my-project

      - name: Set up Kubernetes CLI
        uses: azure/aks-set-context@v3
        with:
         resource-group: 'koushik'
         cluster-name: 'koushik-cluster'
        
      - name: Install kubectl
        run: |
         echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
         curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
         sudo apt-get update
         sudo apt-get install -y kubectl
        shell: bash
        
      - name: Pull and tag user_management image from ACR
        run: |
         az acr login --name koushikpk.azurecr.io
         docker pull koushikpk.azurecr.io/my-project:latest
         docker tag koushikpk.azurecr.io/my-project:latest koushikpk.azurecr.io/my-project:latest
        shell: bash

      - name: Deploy app to AKS
        run: kubectl apply -f deployment.yaml
        
      - name: Get public IP of the service
        id: get-ip
        run: |
         kubectl get svc my-flask-service -o yaml
         PUBLIC_IP=$(kubectl get svc my-flask-service -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
         echo "Public IP of the service: $PUBLIC_IP"
         #echo "kubectl output:"
         #kubectl get svc my-flask-service
         #echo "kubectl describe svc:"
         #kubectl describe svc my-flask-service
         echo "::set-output name=public_ip::$PUBLIC_IP" # Set an output variable

      - name: Display public IP
        run: echo "Public IP of the service:${{ steps.get-ip.outputs.public_ip }}"
  
      - name: Send email
        uses: devellany/send-mail@v1.0.2
        env:
          host: smtp.gmail.com
          port: 587
          account: kdamaraju@primesoft.net
          password: ${{ secrets.SMTP_PASSWORD }}
          sender: Kdamaraju
          from: kdamaraju@primesoft.net
          to: dmaity@primesoft.net
          subject: "Build Results of GIT Actions"
          contentType: "text/html"
          body: |
            <html>
            <body>
            <p>Hi Team,</p>
            <p>Please find the Build Results of GIT Actions:</p>
            <table border="1" cellpadding="5">
            <tr>
            <th>JobName</th>
            <th>Status</th>
            <th>Build Details</th>
            </tr>
            <tr>
            <td>test</td>
            <td>FAILURE</td>
            <td>Build-77</td>
            </tr>
            </table>
            <p>Thanks & Regards,</p>
            </body>
            </html>

