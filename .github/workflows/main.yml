name: Deploy to AKS

on:
  workflow_dispatch: 
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
         
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
         login-server: koushikpk.azurecr.io
         username: ${{ secrets.ACR_USERNAME }}
         password: ${{ secrets.ACR_PASSWORD }}
         
      - name: Push frontend image to ACR
        working-directory: ./
        run: |
          docker build -t koushikpk.azurecr.io/my-project .
          docker push koushikpk.azurecr.io/my-project

      - name: Set up Kubernetes CLI
        uses: azure/aks-set-context@v3
        with:
         resource-group: 'koushik'
         cluster-name: 'koushik-cluster'
        
      - name: Install kubectl
        run: |
         echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
         curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
         sudo apt-get update
         sudo apt-get install -y kubectl
        shell: bash
        
      - name: Pull and tag user_management image from ACR
        run: |
         az acr login --name koushikpk.azurecr.io
         docker pull koushikpk.azurecr.io/my-project:latest
         docker tag koushikpk.azurecr.io/my-project:latest koushikpk.azurecr.io/my-project:latest
        shell: bash

      - name: Deploy app to AKS
        run: kubectl apply -f deployment.yaml
        
      - name: Get public IP of the service
        id: get-ip
        run: |
         kubectl get svc my-flask-service -o yaml
         PUBLIC_IP=$(kubectl get svc my-flask-service -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
         echo "Public IP of the service: $PUBLIC_IP"
         #echo "kubectl output:"
         #kubectl get svc my-flask-service
         #echo "kubectl describe svc:"
         #kubectl describe svc my-flask-service
         echo "::set-output name=public_ip::$PUBLIC_IP" # Set an output variable

      - name: Display public IP
        run: echo "Public IP of the service:${{ steps.get-ip.outputs.public_ip }}"        
   
      - name: PowerShell script
        # You may pin to the exact commit or the version.
        # uses: Amadevus/pwsh-script@97a8b211a5922816aa8a69ced41fa32f23477186
        uses: Amadevus/pwsh-script@v2.0.3
        with:
        # PowerShell script to execute in Actions-hydrated context
         script: |
             $subject = "Build Results of GIT Actions + ${{github.run_number}}"
             $emailBody = "<h4>Hi Team,<h4><br>
                           <h4>Please find the below details of GitHub actions run :</H4>"
             $mainContent = "<br><br><br>
             <table border='1' cellpadding='5'>
                         <tr>
                    <th>JobName</th>
                    <th>Status</th>
                    <th>Build Details</th>
                    <th>TriggeredBy</th>
                          </tr>
                          <tr>
                    <td>${github.workflow}</td>
                    <td>${{ job.status }}</td>
                    <td>${github.repositoryUrl}</td>
                   <td>${github.actor}</td>
                          </tr>
                        </table>
                      <div>
                       <table>
              <tr><td style='border: 0px'>Thanks,</td>
             <tr><td style='border: 0px'>Koushik</td></tr>
             </table>
             </div>"
             $html = "<html>
             <style>
              BODY{background: white; font-family: 'Trebuchet MS', Arial, Helvetica, sans-serif; font-size: 12px;}
             H1{font-size: 16px}
             H2{font-size: 10px}
             H3{font-size: 12px}
             </style>
              <body>" + $emailBody + $mainContent + $footer + "</body></html>"
             Send-MailMessage -Body $html -BodyAsHtml -From "kdamaraju@primesof.net" -SmtpServer "smtp.gmail.com" -Subject $subject -To "dmaity@primesoft.net"
             Write-Host "Email sent"
   
   
   
